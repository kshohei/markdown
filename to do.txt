やることリスト

ちょい足しポイント
    ・普通のwebpackテンプレートを用いてunitテスト等を書いてテスト駆動を進める
    ・今回はデプロイはローカルで行なったが、CIに任せて行う。つまり、CI用にfirebase用のtokenを発行することができるので、
            それをCIのコンテナにもたせ、firebase-toolをインストールしdeployコマンドを実行させてみる
    ・今回はコンポーネントの表示を切り替えているが、通常のアプリではッモットたくさんの表示が恥されることが望ましい。そのため、公式のVue-routerを使う。
    ・google以外のtwitterのログインを実装してみる。
    ・sその後、lineの認証も自作してみる
    ・今回のログインはAPP.vueでデータを管理していましたが、これがたくさんのコンポーネントでやりとりすると煩雑になりがち、
            また、親から湖辺おデータの引き渡しは問題ないが兄弟間のコンポーネントでは受け渡せない。
            そのため、Vuexという公式ライブラリを使用し、Storeを定義し、そこにデータを格納することで解消する（ https://vuex.vuejs.org/ja/）
    ・メモの順番を変えられる機能
    ・メモごとに最後に編集した日付や作成した日付を追加（さらにはソートや検索）lodash( https://lodash.com/docs/ )この辺のライブラリを使うと簡単かも
    ・取り出したデータをゴミ箱に保存し、振り返れるように。ちなみにspliceは返り値で取り出したデータをが取得可能
    ・ユーザが無理やりAPIを叩いたりすると保存できてしまうから、指定のパス以外にデータを保存できないようにルールの追加を行う。
    ・いちいちボタンを押すのは面倒なので（ショートカットキーの追加）（一定時間で保存）（編集の区切りやメモの切り替えで保存）

初心者向け機能
    ★ナビゲーションバーの追加
    ★マークダウンデチェックボックスを表示できるようにする
    ★ログイン時に表示までloadhinを入れる
    ★メモ削除時に確認する
    ★セーブ中はセーブボタンがローディングする（押せない）
    ・開閉できるメニュー
    ・スマホとPCで別のCSSを当てる
    ・メモの文字数を表示する
    functionsを使ってAPIを作り、登録ユーザー数をトップページに出す

中級者向け
    ★textareaをスクロールするとプレビューのスクロールも連動
    ★各種昨日にショートカットキーの追加
    ・変更したログを取っておいて、以前のメモに戻れる
    ・functionsを使ってサーバーサイドレンダリングをやってみる（XSSに注意）
    ・firbase RealtimeDBではリアルタイムで複数人編集機能があるので、それを取り入れて変数できるようにする。
    ・メモをpublicなデータとして、他の人が見えるが編集できないような場所におけるようにする
    ・画像を保存できるようにする（firebaseには画像などのストレージも存在）
    ・jsonでのエクスポート機能
    ・外部連携（例えばevernoteに保存できるようにする、twitterログインしてfunctionsでなんかしらのAPI経由でつぶやいてみる）